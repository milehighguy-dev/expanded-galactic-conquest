---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Ben.
--- DateTime: 11/21/2019 5:02 PM
---


fleet = {
    id = 0,
    name = "placeholder",
    team = 1,
    movesLeft = 1,
    turnAge = 0,
    unit_owned = {
        soldier = true,
        pilot = true
    },
    reinforcements=200,
    makeNewFleet = function(self, newobject, team)
        -- create object if user does not provide one
        newobject = newobject or {}

        setmetatable(newobject, self)
        self.__index = self

        -- each new fleet object has an incremented ID
        self.id = self.id + 1
        newobject.id = self.id

        -- developer selects which team the fleet is
        newobject.team = team

        return newobject
    end,
    setReinforcements = function(self, reinforcements)
        self.reinforcements = reinforcements
        return self
    end

}

-- assigned teams
local REP = 1
local CIS = 2

-- added teams

local ALL = 3
local IMP = 4

planetFleet = {
    ["kam"] = {
        fleet:makeNewFleet(nil, REP)
    },
    ["geo"] = {
        fleet:makeNewFleet(nil, CIS)
    },

    ["hot"] = {
        fleet:makeNewFleet(nil, ALL)
    },
    ["cor"] = {
        fleet:makeNewFleet(nil, IMP)
    },
    ["dag"] = {}
}

print("length of planetFleet " .. #planetFleet)

--planetFleet.myfunc = function()
--    print("hello")
--end

print("length of planetFleet with function" .. #planetFleet)

table.insert(planetFleet['geo'], fleet:makeNewFleet(nil, REP))

table.insert(planetFleet['dag'], fleet:makeNewFleet(nil, REP))

print("dagobah fleet name is " .. tostring(planetFleet['dag'][1].name))

fleetPtr = { [1] = {}, [2] = {}, [3] = {}, [4] = {} }
for planet, fleetList in pairs(planetFleet) do
    for fleetNumber, fleetObject in ipairs(fleetList) do
        if #fleetList > 1 then
            fleetPtr[fleetObject.team][planet] = "a"
        else
            fleetPtr[fleetObject.team][planet] = "x"
        end
    end
end

print("after loop")

print("testing planetFleet geo length " .. tostring(#planetFleet['geo']))

print(fleetPtr[1]['geo'])
print(fleetPtr[2]['geo'])
